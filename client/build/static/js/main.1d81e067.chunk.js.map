{"version":3,"sources":["config/AxiosBase.js","api/index.js","components/post/AddPost.js","hooks/useNewItemMutation.js","components/comment/CommentCard.js","components/comment/Comment.js","components/post/PostCard.js","hooks/useUpdateQueryItem.js","components/common/Loader.js","components/post/PostView.js","views/MainView/MainView.jsx","routes.js","components/common/scrollToTop.js","App.js","helpers/history.js","index.js"],"names":["axios","create","baseURL","process","responseType","getAllPostByUser","queryKey","AxiosBase","get","addPost","data","post","updatePostById","id","patch","AddPost","useState","message","setMessage","userId","addPostFun","queryApi","queryClient","useQueryClient","queryFun","useMutation","onMutate","a","cancelQueries","previousData","getQueryData","setQueryData","old","cloneData","console","log","onError","err","context","onSuccess","onSettled","invalidateQueries","useNewItemMutation","onSubmit","e","preventDefault","postData","_id","Math","floor","random","title","user","content","createdAt","Date","toISOString","like","comment","mutate","className","src","alt","type","value","placeholder","onChange","target","autoFocus","disabled","CommentCard","updatePost","commentData","postId","edit","setEdit","editedInput","setEditedInput","isCommentLiked","includes","formatDistance","parseISO","updatedComments","filter","el","length","onClick","prev","CommentView","view","setComment","newComment","map","item","PostCard","showComments","setShowComments","isLiked","updatedItemData","reduce","acc","curr","useUpdateQueryItem","Loader","height","style","PostView","useQuery","isLoading","landingPage","routes","path","component","mainView","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","App","history","createBrowserHistory","QueryClient","setDefaultOptions","refetchOnWindowFocus","refetchOnReconnect","retry","staleTime","ReactDOM","render","forceRefresh","client","document","getElementById"],"mappings":"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","file":"static/js/main.1d81e067.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL,\n  responseType: \"json\",\n});\n","import AxiosBase from \"../config/AxiosBase\";\n\nexport const getAllPostByUser = ({ queryKey }) => {\n  return AxiosBase.get(`/user/${queryKey[1]}/posts`);\n};\nexport const addPost = (data) => {\n  return AxiosBase.post(\"/post\", data);\n};\nexport const updatePostById = ({ id, data }) => {\n  return AxiosBase.patch(`/post/${id}`, data);\n};\n","import React, { useState } from \"react\";\nimport { addPost } from \"../../api\";\nimport useNewItemMutation from \"../../hooks/useNewItemMutation\";\n\nexport default function AddPost() {\n  // state\n  const [message, setMessage] = useState(\"\");\n\n  //   static dummy userId of a user in database\n  const userId = \"61a2641458c1d4456e460861\";\n\n  const addPostFun = useNewItemMutation([\"posts\", userId], addPost);\n\n  // on Submit\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (!message) {\n      return;\n    }\n    const postData = {\n      _id: Math.floor(Math.random() * 100),\n      title: message,\n      user: userId,\n      content: \"\",\n      createdAt: new Date().toISOString(),\n      like: [],\n      comment: [],\n    };\n    addPostFun.mutate(postData);\n    setMessage(\"\");\n  };\n\n  // main return\n  return (\n    <form onSubmit={onSubmit} className=\"addPost\">\n      <div className=\"head\">\n        <div className=\"circle\">\n          <img src=\"/assets/images/profile.jpeg\" alt=\"profile\"></img>\n        </div>\n        <h1>What is on your mind ?</h1>\n      </div>\n      <input\n        type=\"text\"\n        className=\"messageInput\"\n        value={message}\n        placeholder=\"Start writing from here ...\"\n        onChange={(e) => setMessage(e.target.value)}\n        autoFocus\n      ></input>\n      <div className=\"footer\">\n        <button type=\"button\" className=\"photoBtn\">\n          <img src=\"/assets/images/pictureIcon.png\" alt=\"icon\"></img>\n          <span>Photo/Video</span>\n        </button>\n        <button disabled={message === \"\"} className=\"postBtn\" type=\"submit\">\n          Post it\n        </button>\n      </div>\n    </form>\n  );\n}\n","import { useQueryClient, useMutation } from \"react-query\";\n\nexport default function useNewItemMutation(queryKey, queryApi) {\n  const queryClient = useQueryClient();\n  const queryFun = useMutation(queryApi, {\n    // When mutate is called:\n    onMutate: async (data) => {\n      // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n      await queryClient.cancelQueries(queryKey);\n\n      // Snapshot the previous value\n      const previousData = queryClient.getQueryData(queryKey);\n\n      // Optimistically update to the new value\n      queryClient.setQueryData(queryKey, (old) => {\n        let cloneData = { ...old };\n        cloneData.data.data = [data, ...cloneData.data.data];\n        console.log(\"clone\", cloneData);\n\n        return cloneData;\n      });\n\n      // Return a context object with the snapshotted value\n      return { previousData };\n    },\n\n    // If the mutation fails, use the context returned from onMutate to roll back\n    onError: (err, id, context) => {\n      queryClient.setQueryData(queryKey, context.previousData);\n    },\n    onSuccess: () => {},\n    // Always refetch after error or success:\n    onSettled: () => {\n      queryClient.invalidateQueries(queryKey);\n    },\n  });\n\n  return queryFun;\n}\n","import React, { useState } from \"react\";\nimport { parseISO } from \"date-fns\";\nimport { formatDistance } from \"date-fns/esm\";\nexport default function CommentCard({\n  _id,\n  like,\n  createdAt,\n  message,\n  updatePost,\n  commentData,\n  userId,\n  postId,\n}) {\n  // state\n  const [edit, setEdit] = useState(false);\n  const [editedInput, setEditedInput] = useState(message || \"\");\n  // is Comment liked by user\n  const isCommentLiked = like.includes(userId);\n  // on Comment like\n  const onCommentLike = () => {\n    const updatedComments = commentData.filter((el) => {\n      if (el._id === _id) {\n        el.like = isCommentLiked\n          ? el.like.filter((el) => el != userId)\n          : [...el.like, userId];\n      }\n      return el;\n    });\n    updatePost.mutate({\n      id: postId,\n      data: { comment: updatedComments },\n    });\n  };\n\n  // on Commment Edit\n  const onCommentEdit = () => {\n    if (!editedInput) return;\n    const updatedComments = commentData.filter((el) => {\n      if (el._id === _id) {\n        el.message = editedInput;\n      }\n      return el;\n    });\n    updatePost.mutate({\n      id: postId,\n      data: { comment: updatedComments },\n    });\n    setEdit(false);\n  };\n\n  // on Comment Delete\n  const onCommentDelete = () => {\n    const updatedComments = commentData.filter((el) => el._id !== _id);\n\n    updatePost.mutate({\n      id: postId,\n      data: { comment: updatedComments },\n    });\n  };\n\n  // main return\n  return (\n    <div className=\"flexCenter commentSec\">\n      <img\n        className=\"profile\"\n        src=\"/assets/images/profile.jpeg\"\n        alt=\"profile\"\n      />\n      <div className=\"message\">\n        <div className=\"flexBetweenCenter\">\n          <h3>Patrick Shuf</h3>\n          <p>{formatDistance(new Date(), parseISO(createdAt))} ago</p>\n        </div>\n        <h5>Professional-Student</h5>\n        {edit ? (\n          <form onSubmit={onCommentEdit}>\n            <input\n              className=\"editInput\"\n              type=\"text\"\n              value={editedInput}\n              onChange={(e) => setEditedInput(e.target.value)}\n              autoFocus\n            />\n          </form>\n        ) : (\n          <h4>{message}</h4>\n        )}\n        <div className=\"flexCenter commentActions\">\n          <div className=\"item\">{like.length} Likes</div>\n          <button onClick={onCommentLike}>\n            <img\n              src={\n                isCommentLiked\n                  ? \"/assets/images/heart-like.svg\"\n                  : \"/assets/images/heart.svg\"\n              }\n              alt=\"heart\"\n            ></img>\n            <span>Like</span>\n          </button>\n          <button onClick={() => setEdit((prev) => !prev)}>\n            <img src=\"/assets/images/edit.svg\" alt=\"edit\"></img>\n            <span>Edit</span>\n          </button>\n          <button onClick={onCommentDelete}>\n            <img src=\"/assets/images/trash.svg\" alt=\"trash\"></img>\n            <span>Delete</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport CommentCard from \"./CommentCard\";\n\nexport default function CommentView({\n  view,\n  commentData,\n  userId,\n  updatePost,\n  postId,\n}) {\n  // state\n  const [comment, setComment] = useState(\"\");\n\n  // on Comment submit\n  const onCommentSubmit = (e) => {\n    e.preventDefault();\n    if (!comment) return;\n\n    const newComment = {\n      message: comment,\n      _id: Math.floor(Math.random() * 100),\n      createdAt: new Date().toISOString(),\n      like: [],\n    };\n\n    updatePost.mutate({\n      id: postId,\n      data: { comment: [...commentData, newComment] },\n    });\n    setComment(\"\");\n  };\n\n  // main return\n  return (\n    <div className={view ? \"comment show\" : \"comment\"}>\n      <form onSubmit={onCommentSubmit} className=\"addComment\">\n        <img\n          className=\"profile\"\n          src=\"/assets/images/profile.jpeg\"\n          alt=\"profile\"\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Add a comment\"\n          value={comment}\n          onChange={(e) => setComment(e.target.value)}\n          autoFocus\n        />\n      </form>\n      {commentData.length > 0 &&\n        commentData.map((item) => {\n          return (\n            <CommentCard\n              {...item}\n              updatePost={updatePost}\n              userId={userId}\n              postId={postId}\n              commentData={commentData}\n            />\n          );\n        })}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { formatDistance, parseISO } from \"date-fns\";\nimport { updatePostById } from \"../../api\";\nimport useUpdateQueryItem from \"../../hooks/useUpdateQueryItem\";\nimport Comments from \"../comment/Comment\";\nexport default function PostCard({\n  title,\n  like,\n  comment,\n  createdAt,\n  userId,\n  _id,\n}) {\n  // show comment state to render comment sec\n  const [showComments, setShowComments] = useState(false);\n  // is post liked\n  const isLiked = like.includes(userId);\n\n  // mutaion hook for update post\n  const updatePost = useUpdateQueryItem([\"posts\", userId], updatePostById);\n\n  //  on like fun\n  const onLike = () => {\n    const postData = {\n      id: _id,\n      data: {\n        like: isLiked ? like.filter((el) => el != userId) : [...like, userId],\n      },\n    };\n    updatePost.mutate(postData);\n  };\n  // main return\n  return (\n    <div className=\"post\">\n      <div className=\"content\">\n        <div className=\"head\">\n          <div className=\"profile\">\n            <img\n              src=\"/assets/images/profile.jpeg\"\n              alt=\"profile\"\n              className=\"cover\"\n            ></img>\n            <div className=\"right\">\n              <h3>Patrick Shuff</h3>\n              <div className=\"flexCenter\">\n                <img src=\"/assets/images/marker.svg\"></img>\n                <span>OH , USA</span>\n              </div>\n              <p>{formatDistance(new Date(), parseISO(createdAt))} ago</p>\n            </div>\n          </div>\n          <img\n            src=\"/assets/images/moreIcon.svg\"\n            alt=\"moreIcon\"\n            className=\"pointer\"\n          ></img>\n        </div>\n        <h1>{title}</h1>\n        <div className=\"counter\">\n          <h5>{like.length} Likes</h5>\n          <span>.</span>\n          <h5>{comment.length} comments</h5>\n        </div>\n      </div>\n      <div className=\"footer\">\n        <div className=\"action\">\n          <div onClick={onLike} className=\"flexCenter\">\n            <img\n              src={\n                isLiked\n                  ? \"/assets/images/heart-like.svg\"\n                  : \"/assets/images/heart.svg\"\n              }\n              alt=\"heart\"\n            ></img>\n            <span>Like</span>\n          </div>\n          <div\n            onClick={() => setShowComments((prev) => !prev)}\n            className=\"flexCenter\"\n          >\n            <img src=\"/assets/images/comment.svg\" alt=\"heart\"></img>\n            <span>Comment</span>\n          </div>\n        </div>\n        <Comments\n          view={showComments}\n          commentData={comment}\n          userId={userId}\n          updatePost={updatePost}\n          postId={_id}\n        />\n      </div>\n    </div>\n  );\n}\n","import { useQueryClient, useMutation } from \"react-query\";\n\nexport default function useUpdateQueryItem(queryKey, queryApi) {\n  const queryClient = useQueryClient();\n  const queryFun = useMutation(queryApi, {\n    // When mutate is called:\n    onMutate: async ({ id, data }) => {\n      // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n      await queryClient.cancelQueries(queryKey);\n\n      // Snapshot the previous value\n      const previousData = queryClient.getQueryData(queryKey);\n\n      // Optimistically update to the new value\n      queryClient.setQueryData(queryKey, (old) => {\n        let cloneData = { ...old };\n\n        const updatedItemData = cloneData.data.data.reduce((acc, curr) => {\n          if (curr._id === id) {\n            curr = { ...curr, ...data };\n          }\n          return [...acc, curr];\n        }, []);\n\n        console.log(updatedItemData, \"updated\");\n        cloneData.data.data = updatedItemData;\n\n        return cloneData;\n      });\n\n      // Return a context object with the snapshotted value\n      return { previousData };\n    },\n\n    // If the mutation fails, use the context returned from onMutate to roll back\n    onError: (err, id, context) => {\n      queryClient.setQueryData(queryKey, context.previousData);\n    },\n    onSuccess: () => {},\n    // Always refetch after error or success:\n    onSettled: () => {\n      queryClient.invalidateQueries(queryKey);\n    },\n  });\n\n  return queryFun;\n}\n","import React from \"react\";\n\nexport default function Loader({ height = \"70vh\" }) {\n  return (\n    <div className=\"loader\" style={{ height: height }}>\n      <div className=\"sk-chase\">\n        <div className=\"sk-chase-dot\"></div>\n        <div className=\"sk-chase-dot\"></div>\n        <div className=\"sk-chase-dot\"></div>\n        <div className=\"sk-chase-dot\"></div>\n        <div className=\"sk-chase-dot\"></div>\n        <div className=\"sk-chase-dot\"></div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PostCard from \"./PostCard\";\nimport { useQuery } from \"react-query\";\nimport { getAllPostByUser } from \"../../api\";\nimport Loader from \"../common/Loader\";\nexport default function PostView() {\n  //   static dummy userId\n  const userId = \"61a2641458c1d4456e460861\";\n  const { data, isLoading } = useQuery([\"posts\", userId], getAllPostByUser);\n\n  //   console.log(data, \"data\");\n\n  const postData = data?.data?.data;\n\n  // main return\n  return (\n    <section className=\"postWrapper\">\n      {isLoading && <Loader />}\n      {isLoading ||\n        postData.map((item) => {\n          return <PostCard key={item?._id} {...item} userId={userId} />;\n        })}\n    </section>\n  );\n}\n","import React from \"react\";\nimport AddPost from \"../../components/post/AddPost\";\nimport PostView from \"../../components/post/PostView\";\nimport \"../../assets/css/mainView.css\";\nexport default function landingPage() {\n  // main return\n  return (\n    <div className=\"landingPageWrapper\">\n      <AddPost />\n      <PostView />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport mainView from \"./views/MainView/MainView\";\n\nexport default function routes() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={mainView} />\n    </Switch>\n  );\n}\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import React from \"react\";\nimport Routes from \"./routes\";\nimport ScrollToTop from \"./components/common/scrollToTop\";\n\nfunction App() {\n  // main return\n  return (\n    <div className=\"app\">\n      <ScrollToTop />\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable import/no-extraneous-dependencies */\nimport { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\nexport default history;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport history from \"./helpers/history\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nimport \"./index.css\";\n\nconst queryClient = new QueryClient();\nqueryClient.setDefaultOptions({\n  refetchOnWindowFocus: false,\n  refetchOnReconnect: false,\n  retry: false,\n  staleTime: 1000 * 6,\n});\n\nReactDOM.render(\n  <Router forceRefresh={true} history={history}>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}